{"meta":{"title":"十七的博客小站","subtitle":null,"description":null,"author":"秦十七","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"各种教程","slug":"各种教程","date":"2018-08-22T15:15:30.000Z","updated":"2018-08-22T15:20:24.049Z","comments":true,"path":"2018/08/22/各种教程/","link":"","permalink":"http://yoursite.com/2018/08/22/各种教程/","excerpt":"","text":"廖雪峰教程 markdown语法 小歪的博客 小歪搭博客","categories":[],"tags":[]},{"title":"git命令","slug":"git命令","date":"2018-08-22T15:10:10.000Z","updated":"2018-08-22T15:12:38.449Z","comments":true,"path":"2018/08/22/git命令/","link":"","permalink":"http://yoursite.com/2018/08/22/git命令/","excerpt":"","text":"廖雪峰教程 常用命令集合： ​ git init ​ 创建版本库 (生成例：/.git/目录) ​ 以下命令都需要拥有版本库的时候才可以执行 ​ git add ​ 用于把文件添加到git（暂存区），准备提交【请忽略&lt;&gt;】 ​ git add -A 或者 git add -all ​ 把工作区的所有修改添加到暂存区 ​ git commit -m ‘描述内容’ ​ 只有添加文件之后才能使用，用于提交内容到主分支（默认是master） 本地其它命令合集： ​ git status ​ 查看仓库状态 ​ git diff ​ 查看修改的内容。注意：已经使用git add之后，不能再查看修改的内容 ​ git log ​ 查看git提交日志 记录git commit信息 ​ git reflog ​ 记录每一次git的命令（该命令可用于回滚后忘记最新版的id是找回） ​ HEAD 在git中指代当前版本 HEAD^指上一个，HEAD^^同理 ​ git checkout – ​ 撤销文件的修改到最近一次git commit或者git add 注意：–非常重要 【请忽略&lt;&gt;】 ​ git reset –hard &lt;commit_id&gt; ​ 把工作区内容恢复到指定版本 【请忽略&lt;&gt;】 ​ git reset HEAD ​ 把暂存区的内容清除 【请忽略&lt;&gt;】 ​ git rm ​ 删除文件。删除之后还需要提交（git commit）【请忽略&lt;&gt;】 ​ git mv ​ 移动文件到新的路径，如果新的文件名发生改变，则可以理解为重命名【请忽略&lt;&gt;】 ​ 例子：git mv 12.txt 45.txt ​ 把当前目录下的文件12.txt重命名为45.txt ​ git mv 45.txt ./dir/67.txt ​ 把当前目录下的文件45.txt移动到当前目录下的dir目录中，并重命名为67.txt 远程仓库命令合集： ​ git remote add origin ​ 关联一个github远程仓库 是仓库地址 【请忽略&lt;&gt;】 ​ git push -u origin master ​ 关联远程仓库第一次提交的时候添加上-u参数，用于把本地以前的commit_log推送到远程库 ​ git push origin master ​ 以后的推送就不需要-u参数 ​ git remote rm origin ​ 移除远程库 ​ git remote add origin “Git仓库的ssh格式地址” ​ 添加远程库 ​ git clone ​ 克隆一个已有的远程仓库。address是远程库地址【请忽略&lt;&gt;】 分支管理命令合集： ​ git checkout -b ​ 创建一个新的分支并切换到这个新的分支。-b参数表示创建新分支 newbranch 新的分支名【请忽略&lt;&gt;】 ​ git branch ​ 创建一个新的分支，newbranch 新的分支名【请忽略&lt;&gt;】 ​ git checkout ​ 切换到指定分支【请忽略&lt;&gt;】 ​ git branch ​ 查看当前仓库拥有的分支，以及当前在哪一个分支（分支名前有*表示当前所在分支） ​ git merge ​ 合并指定分支的更新到当前所在分支【请忽略&lt;&gt;】 ​ git branch -d ​ 删除指定分支【请忽略&lt;&gt;】 ​ git branch -D ​ 强制删除指定分支【请忽略&lt;&gt;】 其它命令集合： ​ git log –graph ​ 显示分支合并图 ​ git merge –no-ff ​ 关闭Fast-forward 合并（快速模式），强制禁用快速合并模式进行合并指定分支到当前分支【请忽略&lt;&gt;】 ​ git stash ​ 保存当前分支工作现场，可以执行多次 ​ git stash list ​ 查看当前分支保存的工作现场列表 ​ git stash apply [stash_id] ​ 恢复现场，方括号内是可选参数（指定恢复）【请忽略[]】 ​ git stash pop [stash_id] ​ 恢复现场，并删除【请忽略[]】 ​ git stash drop [stash_id] ​ 删除现场【请忽略[]】 ​ git remote ​ 查看远程库信息，默认显示origin ​ git remote -v ​ 查看更详细的远程库信息，包括push 和fetch 地址 本文描述的命令还不是很全面，更详细的请运行 ​ git –help 查阅","categories":[],"tags":[]},{"title":"扇贝","slug":"扇贝","date":"2018-08-22T13:44:22.000Z","updated":"2018-08-22T15:16:07.683Z","comments":true,"path":"2018/08/22/扇贝/","link":"","permalink":"http://yoursite.com/2018/08/22/扇贝/","excerpt":"","text":"He who spends time regretting the past loses the present and risks the future. 追悔过往的人，丢失了现在，赌上了未来。 Half is worse than none at all. 一知半解比一无所知更痛苦。 ​ 《西部世界》 There is just one life for each of us: our own. 我们都只有一种生活可以过：自己的生活。 Above us all the stars are watching. There’s no place I’d rather be in this world. 我们之上，繁星守望；世界之大，唯伴你侧。 ​ Bruno Mars You’ll have bad times, but it’ll always wake you up to the good stuff you weren’t paying attention to. 每个人都会经历低谷，但也正是这些低谷会让你注意到平时注意不到的东西。 ​ 《心灵捕手》 Dare, and the world always yields. 大胆挑战，世界总会让步。 ​ 威廉·梅克比斯·萨克雷 When given the choice between being right or being kind, choose kind. 如果要在“正确”和“善良”之间做选择，请选择“善良”。 ​ 《奇迹男孩》 It’s not who you are underneath, it’s what you do that define you. 你真正是谁并不重要，重要的是你的所作所为。 ​ 《蝙蝠侠：侠影之谜》 When we strive to become better than we are, everything around us becomes better too. 当我们努力变得更好时，周围的一切也会变得更美好。 ​ 《牧羊少年奇幻之旅》 The wiser a man becomes, the more he will read, and those who are wisest read most. 越是睿智的人，越愿意读书，最有智慧的人读的书也最多。 ​ 安徒生","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-08-22T13:36:58.781Z","updated":"2018-08-22T13:36:58.782Z","comments":true,"path":"2018/08/22/hello-world/","link":"","permalink":"http://yoursite.com/2018/08/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}